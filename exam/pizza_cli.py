from random import randint
from typing import Callable
import click
from pizza import Pizza
from utils import get_menu_from_file


@click.group()
def cli() -> None:
    """ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ """
    pass


@cli.command()
def menu() -> None:
    """ –í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –≤ –∫–æ–Ω—Å–æ–ª—å """
    # –ß–∏—Ç–∞–µ–º –º–µ–Ω—é –∏–∑ —Ñ–∞–π–ª–∞
    pizzas_menu = get_menu_from_file('pizza_menu_config.json')
    for pizza in pizzas_menu['menu'].values():
        print(f"- {pizza['name']} {pizza['icon']}: {', '.join(pizza['recipe'])}")
    print(f'–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü: {Pizza.get_available_sizes()}')


def log(text, time_interval) -> Callable:
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    """
    def log_decorator(func) -> Callable:
        def wrapper(*args, **kwargs) -> None:
            for pizza in args:
                print(text.format(pizza, randint(*time_interval)))
            func(*args, **kwargs)
        return wrapper
    return log_decorator


@log('üç≥ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ {} –∑–∞ {} –º–∏–Ω—É—Ç!', (10, 45))
def bake(pizza: Pizza) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõ¥ –¥–æ—Å—Ç–∞–≤–∏–ª–∏ {} –∑–∞ {} –º–∏–Ω—É—Ç!', (30, 75))
def deliver(pizza: Pizza) -> None:
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('üè† –∑–∞–±—Ä–∞–ª–∏ {} –∑–∞ {} –º–∏–Ω—É—Ç!', (3, 30))
def pickup(pizza: Pizza) -> None:
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza, size='L', delivery=False) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –º–µ–Ω—é
    pizza_menu = get_menu_from_file('pizza_menu_config.json')
    # –ò—â–µ–º –≤ –º–µ–Ω—é –ø–æ –∫–ª—é—á—É –¥–∞–Ω–Ω—ã–µ –æ –ø–∏—Ü—Ü–µ
    try:
        choosen_pizza = pizza_menu['menu'][pizza.lower()]
    except KeyError as key_exc:
        raise KeyError('–¢–∞–∫–æ–π –ø–∏—Ü—Ü—ã –Ω–µ—Ç –≤ –º–µ–Ω—é') from key_exc
    pizza_for_order = Pizza(choosen_pizza['name'],
                            choosen_pizza['icon'],
                            choosen_pizza['recipe'],
                            size)
    bake(pizza_for_order)
    if delivery:
        deliver(pizza_for_order)
    else:
        pickup(pizza_for_order)


if __name__ == '__main__':
    cli()
